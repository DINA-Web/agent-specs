paths:
  /v1/identifier:
    get:
      tags:
        - Identifier
      summary: List identifiers
      operationId: getIdentifiers
      description: By passing in query string, user can get available identifiers authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the persons
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort order string, such as descending, denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: identifiers satifying the query restrictions
          content:
            application/vnd.api+json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Identifier'                
        '404':
          description: identifier not found
    post:
      tags:
        - Identifier
      summary: Add an Identifier
      operationId: addIdentifier
      description: Add a identifier
      responses:
        '201':
          description: Identifier created
        '422':
          description: Data integrity violation          
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NewIdentifier'
        description: Identifier to add
  /v1/identifier/{Id}:
    get:
      tags:
        - Identifier
      summary: Get an identifier
      description: Return a single identifier
      operationId: getIdentifierById
      parameters:
        - name: Id
          in: path
          description: ID of the Identifier to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.api+json:
              schema:          
                $ref: '#/components/schemas/Identifier'
        '400':
          description: Not a valid uuid                
        '404':
          description: Identifier not found          
    patch:
      tags:
        - Identifier
      summary: Update an identifier
      operationId: updateIdentifier
      description: Update a identifier
      parameters:
        - name: Id
          in: path
          description: Identifier id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Identifier updated
        '400':
          description: invalid input, object invalid
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Identifier'
        description: Identifier to add
    delete:
      tags:
        - Identifier
      summary: Delete an identifier
      operationId: deleteIdentifier
      description: Delete an identifier
      parameters:
        - name: Id
          in: path
          description: Identifier id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: Identifier marked as deleted
        '400':
          description: Not a valid uuid          
        '404':
          description: Identifier not found       
components:
  schemas:
    Identifier:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
              example: d290f1ee-6c54-4b01-90e6-d701748f0851
              description: Identifier of the object as UUID
          allOf:
            - $ref: '#/components/schemas/CommonIdentifier'

    NewIdentifier:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/CommonIdentifier'

    CommonIdentifier:
      type: object
      required:
        - type
        - attributes       
      properties:            
        type:
          enum: [identifier]      
          description: The type of data being returned.
        attributes:
          type: object
          required:
            - namespace
            - value
          properties:
            namespace:
              type: string
              description: namespace of the identifier
              example: wikidata
            value:
              type: string  
              description: value of the identifier in the namespace
              example: https://www.wikidata.org/wiki/Q51044
            createdBy:
              type: string      
              readOnly: true
              description: authenticated user who create the identifier record
              example: test user
            createdOn:              
              type: string
              format: date-time                            
              readOnly: true
              description: "date and time when the identifier record was created in ISO format"
              example:  "1985-04-12T23:20:50.52Z"

